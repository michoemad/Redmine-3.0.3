c
x
c
x
.c
c
Tracker.find_by(name:"Release").id
Tracker.find_by(name:"Release")
@issue.tracker_id
@issue
c
q
x.code
c
q
x
c
q
y
q
x.class
x.header.header
x.header.state
x.header
x.header.status
x.status
x.statujs
x
c
step
h
x
c
ActionController::Parameters
params.class
ApplicationController::Parameters
ApplicationController:Parameters
ApplicationController::Parameters
ApplicationController
Parameters
c
params.class
params
c
x.header.body
x.header
x.body
x.error
x = Net::HTTP.post_form(URI('http://192.168.99.11:8100/createLatexDoc'),{})
x = Net::HTTP.post_form(URI('http://192.168.99.11:8100/createLatexDoc'))
x = Net::HTTP.post_form(URI('http://192.168.99.11:8100/createLatexDoc'),a)
a=ActionController::Parameters.new(relOwner:"me")
ActionController::Parameters.new(relOwner:"me")
ActionController::Parameters.new(relOwner:"me")\
ActionController::Parameters.new
ActionController::Parameters
Parameters
params.class
Parameter
Paramter
Parameter
x.body
x
x = Net::HTTP.post_form(URI('http://192.168.99.11:8100/createLatexDoc'),params)
x = Net::HTTP.post_form(URI('http://192.168.99.11:8100/createLatexDoc'),{relOwner: "me"})
x = Net::HTTP.post_form(URI('http://192.168.99.11:8100/createLatexDoc'),{relowner: "me"})
=>  6:          x = Net::HTTP.post_form(URI('http://192.168.99.11:8100/createLatexDoc'),{relowner: "me"})
params.class
params
q
User.current
params
q
@issue
q
@issue
q
params
q
params
q
params["project"]["will_formats"]
params["project"]["will_format"]
params[project]["will_format"]
params["will_format"]
params
q
params
q
@project
c
q
index
self
c
params
Project.current
User.current
Issue
c
builder.to_html
buidler.to_html
builder = Nokogiri::HTML::Builder.new do |xml| xml.label { xml.input(name:"m") {xml.text "HI"} } end
builder.to_html
builder = Nokogiri::HTML::Builder.new do |xml| xml.label { xml.input(name:"m") { "HI"} } end
builder = Nokogiri::HTML::Builder.new do |xml| xml.label { xml.input(name:"m") "HI" } end
builder.to_html
builder = Nokogiri::HTML::Builder.new do |xml| xml.label { xml.input "HI" } end
builder = Nokogiri::XML::Builder.new do |xml| xml.label { xml.input(name:"qalb") "HI" } end
builder.to_xml
builder = Nokogiri::XML::Builder.new do |xml| xml.label { xml.input "HI" } end
builder = Nokogiri::XML::Builder.new do |xml| xml.label { xml.input "HI" } } end
builder.to_xml
builder.to_html
builder = Nokogiri::XML::Builder.new do |xml| xml.label { xml.input { xml.name "hi" } } end
builder.to_html
builder = Nokogiri::HTML::Builder.new do |xml| xml.label { xml.input { xml.name "hi" } } end
builder.to_html
builder = Nokogiri::HTML::Builder.new do |xml| xml.label { xml.input {  } } end
builder = Nokogiri::HTML::Builder.new do |xml| xml.label { xml.input { xml.text "HI" } }} end
builder.to_html
builder = Nokogiri::HTML::Builder.new do |xml| xml.label { xml.input { xml.text "HI" } } end
builder = Nokogiri::XML::Builder.new do |xml| xml.label { xml.input { HI } } end
c
builder=Nokogiri::XML::Builder.new do |xml|
   10:     }
    9:       HI
    8:     xml.input {
    7:  xml.label {
builder = Nokogiri::XML::Builder.new do |xml|
c
n= <<EOT
q
Note.all
@note = Note.create(title: file_name, attachment_id: @attachment.id,project_id:@project.id)
Note.last.delete
Note.all
@attachment.id
Note.all
@note = Note.create(title: file_name, attachmend_id: @attachment.id,project_id:@project.id)
Attachment.all
@attachment
k
u=agent.get(URI.join('http://localhost:3000/projects/tyhft/files/new')) 
x=2
agent
print "h"
u=agent.get(URI.join('http://localhost:3000/projects/tyhft/files/new')) 
agent.get(URI.join('http://localhost:3000/projects/tyhft/files/new')) do |upload_page|
puts upload_page.labels
agent.get(URI.join('http://localhost:3000/projects/tyhft/files/new')) do |upload_page|
agent = Mechanize.new
require 'mechanize'
agent
c
project_files_path
fiels_page_path
q
agent.get(URI.join('d'))
agent
URI.join('a')
URI
c
attachments
n
container
c
@containers
n
@containers
n
@containers
n
Project.includes(:attachments).references(:attachments).find(@project.id)
Project.includes(:attachments).references(:attachments).find(@project_ids)
Project.includes(:attachments).references(:attachments).find(@project_id)
Project.includes(:attachments).references(:attachments)
Project.includes(:attachments)
Project.includes
User.table_name
Attachment.table_name
Attachment
params
c
q
a.save
a
a.author = User.current
a.author = rr
a
a.filename = "this"
a.errors
a.save
Attachment.new
a = Attachment.new(:file => tempfile)
tempfile
c
@document
q
@document
@document.safe_attributes=({"title"=>'hi'})
@document
q
@documen
@document.safe_attributes= {:title => "hi"}
@document
@document.safe_attributes= {title: "hi"}
@document
c
@document.save
@document
@document\
@document.title= "hu"
@document.errors
@document.save.errors
@document.save
@document
q
params
c
params
c
q
x['content-disposition'][/filename(.*)/][10..-2]
x['content-disposition'][/filename(.*)/][10..-1]
x['content-disposition'][/filename(.*)/][10,-1]
x['content-disposition'][/filename(.*)/][11]
x['content-disposition'][/filename(.*)/]
x['content-disposition'][/filename(.*)/][10,]
x['content-disposition'][/filename(.*)/][10:]
x['content-disposition'][/filename(.*)/][11]
x['content-disposition'][/filename(.*)/]
x['content-disposition'][/filename/]
x['content-disposition'][0]
/filename.+/.match(x['content-disposition']).to_s
/filename.+/.match(x['content-disposition'])
/filename.+/.match(x['content-disposition']).to_s
/filename.+/.match(x['content-disposition']).methods.to_s
/filename.+/.match(x['content-disposition']).methods
/filename.+/.match(x['content-disposition'])
/filename.+\\/.match(x['content-disposition'])
/filename.+\/.match(x['content-disposition'])
/filename.+/.match(x['content-disposition'])
/.+/.match(x['content-disposition'])
/./.match(x['content-disposition'])
/filename=/\/.match(x['content-disposition'])
/filename=\/.match(x['content-disposition'])
/filename./.match(x['content-disposition'])
/filename=./.match(x['content-disposition'])
/filename=/.match(x['content-disposition'])
/filename/.match(x['content-disposition'])
/"filename"/.match(x['content-disposition'])
x['content-disposition'].match("filename=/")
x['content-disposition'].match("filenames")
x['content-disposition'].match("filename")
x['content-disposition']
